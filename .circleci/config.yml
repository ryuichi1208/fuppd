version: 2.1
jobs:
  lint:
    working_directory: ~/workspace
    docker:
      - image: python:3.7.4-alpine3.10
        environment:
          PIPENV_VENV_IN_PROJECT: true
    steps:
      - run:
          name: apk add git
          command: |
            apk add \
              --update \
              --no-progress \
              git \
              openssh-client
      - checkout
      - run:
          name: install package
          command: |
            pip -V
            apk add --no-cache \
              git openssl ffmpeg \
              opus libffi-dev gcc \
              curl musl-dev
            pip install --upgrade pip
            pip install -r requirements.txt
      - run:
          name: run fomatting
          command: |
            black --diff app.py
            black app.py
      - run:
          name: run format check
          command: pycodestyle app.py
      - run:
          name: run mypy
          command: |
            mypy -V
            mypy app.py
      - run:
          name: run test
          command: pytest -v
      - run:
          name: output report
          command: |
            pytest --cov . --cov-report=html:test-report
      - store_test_results:
          path: ./test-report


  build:
    machine: true
    steps:
      - checkout
      - run:
          name: build container image
          command: DOCKER_BUILDKIT=1 ; docker version && docker image build -t fuppdimg01 .
      - run:
          name: check image
          command: docker image ls --all
      - run:
          name: run container
          command: docker container run -d --name app01 -p 5000:5000 fuppdimg01
      - run:
          name: start access
          command: script/do_curl.sh

  deploy:
    machine: true
    steps:
      - checkout
      - run:
          name: deploy
          command: |
            date
            ls -l

workflows:
  version: 2
  build_and_test:
    jobs:
      - lint:
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - lint
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - lint
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
